print("Sahil")
2+5
v <- (1,2,3,4)
v <- c(1,2,3,4)
v
getwd()
getwd()
print("Second Line")
print("First Line")
print("Second Line")
print("First Line")
print("Second Line")
print("First Line")
print("Second Line")
source('~/demo.R')
source('~/demo.R')
install.packages('rvest')
source('~/.active-rstudio-document')
demo(package = 'rvest',topic = 'tripadvisor')
source('~/.active-rstudio-document')
install.packages("rvest")
library(rvest)
demo(package = 'rvest')
demo(package = 'rvest',topic = 'zillow')
install.packages('tidyr')
source('~/.active-rstudio-document')
demo(package = 'rvest',topic = 'zillow')
source('~/Desktop/R-Programming/logicalOperator.R')
source('~/Desktop/R-Programming/logicalOperator.R')
df[df$mpg>20,]
print(df[df$mpg>20],cyl)
print(df[df$mpg>20],df$cyl)
print(df[df$mpg>20],'cyl')
print(df[df$mpg>20,df$cyl])
print(df[df$mpg>20,df$cyl])
print(subset(df,mpg > 20))
print(df[(df$mpg>20) & (df$hp>100) ,])
source('~/Desktop/R-Programming/if_else_elseif.R')
number <- 5
if(number==4){
print("x is not equal to 5")
}
number <- 5
source('~/Desktop/R-Programming/if_else_elseif.R')
if(number==4){
print("x is not equal to 5")
}
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/if_else_elseif.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
class(var)
var <- integer(prompt = "Enter the number : ")
var <- int(prompt = "Enter the number : ")
var <- (prompt = "Enter the number : ")
class(var)
int.var = as.integer(var)
var <- readline(prompt = "Enter the number : ")
int.var = as.integer(var)
class(var)
class(int.var)
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
matrix <- matrix((1:10), nrow =2, ncol = 5,byrow = T)
print(matrix())
print(matrix)
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
x<-c(1,24,3)
print(x[1])
print(x[2])
x<-c(1,24,3)
if((x[1]>x[2])& (x[1]>x[3])){
print(x[1])
}else if((x[2]>x[1])& (x[2]>x[3])){
print(x[2])
}else{
print(x[3])
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
x<-c(1,24,3)
largest <- function(x)
{
if((x[1]>x[2])& (x[1]>x[3])){
print(x[1])
}else if((x[2]>x[1])& (x[2]>x[3])){
print(x[2])
}else{
print(x[3])
}
}
print(largest(x))
largest <- function(x)
{
if((x[1]>x[2])& (x[1]>x[3])){
#print(x[1])
return (x[1])
}else if((x[2]>x[1])& (x[2]>x[3])){
#print(x[2])
return (x[2])
}else{
#print(x[3])
return(x[3])
}
}
print(largest(x))
print(x[1])
source('~/Desktop/R-Programming/conditionalStatementExercise2.R')
source('~/Desktop/R-Programming/conditionalStatementExercise2.R')
source('~/Desktop/R-Programming/conditionalStatementExercise2.R')
source('~/Desktop/R-Programming/conditionalStatementExercise2.R')
source('~/Desktop/R-Programming/conditionalStatementExercise2.R', echo=TRUE)
source('~/Desktop/R-Programming/conditionalStatementExercise2.R')
print(x[3])
x<-c(1,24,3)
if((x[1]>x[2])& (x[1]>x[3])){
print(x[1])
}else if((x[2]>x[1])& (x[2]>x[3])){
print(x[2])
}else{
print(x[3])
}
source('~/Desktop/R-Programming/conditionalStatementExercise2.R')
source('~/Desktop/R-Programming/conditionalStatementExercise2.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
var <- 2
if(var ==1 ){
print("Hello")
}else{
print("")
}
var <- readline(prompt = "Enter the number : ")
int.var = as.integer(var)
class(var)
class(int.var)
print(paste("The number you have entered is :",int.var))
if(int.var%%2==0){
print("The number is even")
}else{
print("The number is odd")
}
matrix <- matrix((1:10), nrow =2, ncol = 5,byrow = T)
print(matrix)
if(is.matrix(matrix)){
print("Yes it is ")
}else{
print("No it is not")
}
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
4
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/logicalOperator.R')
source('~/Desktop/R-Programming/conditionalStatementExercise.R')
source('~/Desktop/R-Programming/conditionalStatementExercise2.R')
source('~/Desktop/R-Programming/conditionalStatementExercise2.R')
source('~/Desktop/R-Programming/conditionalStatementExercise2.R')
source('~/Desktop/R-Programming/StasticalProgramming-R/Advanced-R-Programming/pipe_operator_Dplyr.R')
source('~/Desktop/R-Programming/StasticalProgramming-R/Advanced-R-Programming/pipe_operator_Dplyr.R')
result <- arrange(sample_n(filter(data,mpg>20),size = 5),desc(mpg))
result
source('~/Desktop/R-Programming/StasticalProgramming-R/Advanced-R-Programming/pipe_operator_Dplyr.R')
source('~/Desktop/R-Programming/StasticalProgramming-R/Advanced-R-Programming/pipe_operator_Dplyr.R')
source('~/Desktop/R-Programming/StasticalProgramming-R/Advanced-R-Programming/pipe_operator_Dplyr.R', echo=TRUE)
source('~/Desktop/R-Programming/StasticalProgramming-R/Advanced-R-Programming/pipe_operator_Dplyr.R', echo=TRUE)
source('~/Desktop/R-Programming/StasticalProgramming-R/Advanced-R-Programming/pipe_operator_Dplyr.R', echo=TRUE)
source('~/Desktop/R-Programming/StasticalProgramming-R/Advanced-R-Programming/pipe_operator_Dplyr.R', echo=TRUE)
result3 <- df %>% filter(mpg>20) %>% sample_n(size = 5) %>% arrange(desc(mpg))
result3
library(dplyr)
data <- mtcars
head(data)
filteredCars = filter(data,(mpg>20 & cyl==6))
filteredCars
count(filteredCars)
orderedDataframe <- arrange(data,cyl,desc(wt))
orderedDataframe
select(data,mpg,hp)
distinctData <- distinct(data,gear)
distinctData
newcolumnData = mutate(data,Performance=hp/wt)
newcolumnData
meanValue <- summarise(data,mean(mpg))
meanValue
meanHP = data %>% mean(hp) %>% filter(cyl==6)
meanHP = data %>% summarise(mean(hp)) %>% filter(cyl==6)
meanHP = data %>% filter(cyl==6)  %>% summarise(mean(hp))
source('~/Dplyr_Exercise.R', echo=TRUE)
library(ggplot2)
library(dplyr)
library(plotly)
#Read the data
data <- read.csv('/Users/sahilnagpal/Desktop/R-Programming/R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Training Exercises/Capstone and Data Viz Projects/Capstone Project/Batting.csv')
data
#columns present in data
colnames(data)
#head the data
head(data)
#geeting a single column
data$teamID
cls
clear
#geeting a single column
data$teamID
data$yearID
data[,'teamID']
getwd()
source('~/Untitled.R', echo=TRUE)
print("Hello Sahil")
varibale <- 100
print(varibale)
typeof(varibale)
varibale <- 100.0
typeof(varibale)
as.integer(varibale)
typeof(varibale)
varibale <- as.integer(varibale)
typeof(varibale)
data <- read.csv(file.choose())
while(FALSE){
print("hello")
}
source('~/.active-rstudio-document', echo=TRUE)
print("Sahil")
print("Sahil")
source('~/.active-rstudio-document', echo=TRUE)
print("Sahil")
while(TRUE){
print("abc")
}
number <- 1
while(number<12){
print(number)
number <- number+1
}
for(i in 1:5){
print("hello")
}
1:5
sahil <- [1,2,3,4]
sahil <- (1,2,3,4)
sahil <- c(1,2,3,4)
typeof(sahil)
sahil <- c[1,2,3]
sahil <- c(1,2,3)
students <- c("Sean","Lousia","Frank","Farhad","Li")
midterm <- c(80,90,93,82,95)
students <- c("Sean","Lousia","Frank","Farhad","Li")
source('~/Desktop/R-Programming/StasticalProgramming-R/TrentCourse/R-Course-Practical.R', echo=TRUE)
students
names(course.grade) <- students
course.grade
#Named Components
course.grade
students
final
midterm
#Named Components
course.grade
names(course.grade) <- students
names(course.grade)
course.grade[c("Frank")]
#Generating sequences
0:10
15:5
seq(1,10,2)
#Generating repeats
rep(1,3)
rep(5:10,2)
rep(1:3,each=2,3)
rep(1:4,c(1,2,3,4))
?runif
runif(1,2,3)
as.integer(runif(1,2,3))
as.integer(runif(1,2,3))
runif(10,7,9)
#sample number
sample(1:19,2)
#normal distrubution and Exponential distribution
rnorm(5,mean = 100 , sd=10)
?rexp()
rexp(1,2)
pwd()
getwd()
setwd("/Users/sahilnagpal/Desktop/R-Programming/StasticalProgramming-R/TrentCourse/")
ls
getwd()
gender <- c("male","male","female","female","male","female","male")
source('~/Desktop/R-Programming/StasticalProgramming-R/TrentCourse/R-Course-Practical_Factors.R', echo=TRUE)
data <- data.frame(height,weight,gender)
data
is.factor(data)
factor(data$gender)
source('~/Desktop/R-Programming/StasticalProgramming-R/TrentCourse/R-Course-Practical_Factors.R', echo=TRUE)
data()
typeof(women)
women
LifeCycleSavings
?LifeCycleSavings
?Orange
?Titanic
Titanic
head(Titanic)
UScitiesD
iris
?LifeCycleSavings
LifeCycleSavings
per.savings.15 <- LifeCycleSavings$sr > 15
per.savings.15
personal.savings.more.15 <- LifeCycleSavings[per.savings.15]
personal.savings.more.15 <- LifeCycleSavings[per.savings.15]
per.savings.15 <- LifeCycleSavings[LifeCycleSavings$sr>=15,]
per.savings.15
